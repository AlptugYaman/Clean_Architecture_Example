// Mocks generated by Mockito 5.2.0 from annotations
// in tokens/test/helpers/test_helpers.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tokens/src/core/network/network_exception.dart' as _i8;
import 'package:tokens/src/core/network/network_manager.dart' as _i13;
import 'package:tokens/src/data/datasources/remote/remote_data_source.dart'
    as _i12;
import 'package:tokens/src/data/models/token/listings_model.dart' as _i3;
import 'package:tokens/src/data/models/token_details/token_detail_model.dart'
    as _i4;
import 'package:tokens/src/domain/entities/alert_tokens.dart' as _i11;
import 'package:tokens/src/domain/entities/token/listings.dart' as _i9;
import 'package:tokens/src/domain/entities/token_details/token_detail.dart'
    as _i10;
import 'package:tokens/src/domain/repositories/token_repository.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeListingsModel_1 extends _i1.Fake implements _i3.ListingsModel {}

class _FakeTokenDetailModel_2 extends _i1.Fake implements _i4.TokenDetailModel {
}

class _FakeDio_3 extends _i1.Fake implements _i5.Dio {}

/// A class which mocks [TokenRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenRepository extends _i1.Mock implements _i6.TokenRepository {
  MockTokenRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.NetworkExceptions, _i9.Listings>> getAllTokens(
          int? page, int? pageSize) =>
      (super.noSuchMethod(Invocation.method(#getAllTokens, [page, pageSize]),
              returnValue:
                  Future<_i2.Either<_i8.NetworkExceptions, _i9.Listings>>.value(
                      _FakeEither_0<_i8.NetworkExceptions, _i9.Listings>()))
          as _i7.Future<_i2.Either<_i8.NetworkExceptions, _i9.Listings>>);
  @override
  _i7.Future<_i2.Either<_i8.NetworkExceptions, _i10.TokenDetail>>
      getTokenDetails(String? symbol) => (super.noSuchMethod(
          Invocation.method(#getTokenDetails, [symbol]),
          returnValue: Future<
                  _i2.Either<_i8.NetworkExceptions, _i10.TokenDetail>>.value(
              _FakeEither_0<_i8.NetworkExceptions, _i10.TokenDetail>())) as _i7
          .Future<_i2.Either<_i8.NetworkExceptions, _i10.TokenDetail>>);
  @override
  _i7.Future<List<_i11.AlertTokens>> getAllAlertTokens() =>
      (super.noSuchMethod(Invocation.method(#getAllAlertTokens, []),
              returnValue:
                  Future<List<_i11.AlertTokens>>.value(<_i11.AlertTokens>[]))
          as _i7.Future<List<_i11.AlertTokens>>);
  @override
  _i7.Future<void> insertANewAlert(_i11.AlertTokens? alertTokens) =>
      (super.noSuchMethod(Invocation.method(#insertANewAlert, [alertTokens]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> deleteAlert(_i11.AlertTokens? alertToken) =>
      (super.noSuchMethod(Invocation.method(#deleteAlert, [alertToken]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i12.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i3.ListingsModel> getAllTokens(int? page, int? pageSize) =>
      (super.noSuchMethod(Invocation.method(#getAllTokens, [page, pageSize]),
              returnValue:
                  Future<_i3.ListingsModel>.value(_FakeListingsModel_1()))
          as _i7.Future<_i3.ListingsModel>);
  @override
  _i7.Future<_i4.TokenDetailModel> getTokenDetails(String? symbol) =>
      (super.noSuchMethod(Invocation.method(#getTokenDetails, [symbol]),
              returnValue:
                  Future<_i4.TokenDetailModel>.value(_FakeTokenDetailModel_2()))
          as _i7.Future<_i4.TokenDetailModel>);
}

/// A class which mocks [NetworkManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkManager extends _i1.Mock implements _i13.NetworkManager {
  MockNetworkManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Dio get dio =>
      (super.noSuchMethod(Invocation.getter(#dio), returnValue: _FakeDio_3())
          as _i5.Dio);
}
